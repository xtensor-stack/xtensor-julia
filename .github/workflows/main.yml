name: CI
on:
  workflow_dispatch:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  unix:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        include:
          - os: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev-unix.yml
          environment-name: xtensor-julia

      - name: install build dependencies
        shell: bash -l {0}
        run: |
          $HOME/micromamba-bin/micromamba install cmake cxx-compiler -c conda-forge -y

      - name: cmake configure
        shell: bash -l {0}
        run: |
          mkdir -p build
          cd build
          cmake .. \
               -D DOWNLOAD_GTEST=ON \
               -D BUILD_TESTS=ON \
               -DCMAKE_BUILD_TYPE=Release \
               -D CMAKE_INSTALL_PREFIX=$CONDA_PREFIX

      - name: install CxxWrap
        shell: bash -l {0}
        run: |
          julia -E "using Pkg; Pkg.add(PackageSpec(name=\"CxxWrap\", version=\"0.11.2\"))"
          export CXXWRAP_PREFIX=$(julia -E "using CxxWrap; CxxWrap.prefix_path()")
          export CXXWRAP_PREFIX=$(eval echo $CXXWRAP_PREFIX)
          rm -rf $CXXWRAP_PREFIX
          ln -s $CONDA_PREFIX $CXXWRAP_PREFIX

      - name: build
        shell: bash -l {0}
        run: |
          cd build
          make -j ${{ steps.cpu-cores.outputs.count }} test_xtensor_julia

      - name: Test xtensor-julia
        shell: bash -l {0}
        run: |
          cd build
          cd test
          ./test_xtensor_julia

      - name: install xtensor-julia
        shell: bash -l {0}
        run: |
          cd build
          make install

  win:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2016 ]

    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev-win.yml
          environment-name: xtensor-julia

      - name: micromamba shell hook
        shell: powershell
        run: |
          micromamba shell hook -s cmd.exe -p C:\Users\runneradmin\micromamba
          Get-Content -Path C:\Users\runneradmin\micromamba\condabin\mamba_hook.bat

      - name: install julia
        uses: julia-actions/setup-julia@v1
        with:
          version: 1.6.3

      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: install CxxWrap
        shell: cmd
        run: |
          julia -E "using Pkg; Pkg.add(PackageSpec(name=\"CxxWrap\", version=\"0.11.2\"))"

      - name: cmake configure
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xtensor-julia
          julia -E "using CxxWrap; joinpath(CxxWrap.prefix_path(), \"lib\", \"cmake\", \"JlCxx\")" > temp.txt
          set /p JlCxx_DIR=<temp.txt
          set JlCxx_DIR=%JlCxx_DIR:"=%
          mkdir -p build
          cd build
          cmake .. ^
              -G "MinGW Makefiles" ^
              -D DOWNLOAD_GTEST=ON ^
              -D JlCxx_DIR=%JlCxx_DIR% ^
              -DCMAKE_BUILD_TYPE=Release ^
              -D CMAKE_INSTALL_PREFIX=%CONDA_PREFIX%\\LIBRARY

      - name: depends
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xtensor-julia
          mamba install curl 7zip
          curl --output depends.zip --url https://www.dependencywalker.com/depends22_x64.zip
          7z e depends.zip 
          Move /y depends.exe %CONDA_PREFIX%/Library/bin/
          Move /y depends.dll %CONDA_PREFIX%/Library/bin/

      - name: build
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xtensor-julia
          cd build
          cmake --build .
          depends /c ./xtensor-julia
