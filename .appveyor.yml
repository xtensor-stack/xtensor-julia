build: false

os: Visual Studio 2015

platform:
  - x64

environment:
  matrix:
    - MINICONDA: C:\xtensor-conda

init:
  # Install miniconda
  - "ECHO %MINICONDA%"
  - C:\"Program Files (x86)"\"Microsoft Visual Studio 14.0"\VC\vcvarsall.bat %PLATFORM%
  - ps: if($env:Platform -eq "x64"){Start-FileDownload 'http://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.exe' C:\Miniconda.exe; echo "Done"}
  - ps: if($env:Platform -eq "x86"){Start-FileDownload 'http://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86.exe' C:\Miniconda.exe; echo "Done"}
  - cmd: C:\Miniconda.exe /S /D=C:\xtensor-conda
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%MINICONDA%\\Library\\bin;%PATH%"
  # Download most recent Julia Windows binary
  - ps: if($env:Platform -eq "x64"){(new-object net.webclient).DownloadFile(
        $("https://julialang-s3.julialang.org/bin/winnt/x64/1.6/julia-1.6.3-win64.exe"),
        "C:\projects\julia-binary.exe")}
  - ps: if($env:Platform -eq "x86"){(new-object net.webclient).DownloadFile(
        $("https://julialang-s3.julialang.org/bin/winnt/x86/1.6/julia-1.6.3-win32.exe"),
        "C:\projects\julia-binary.exe")}
  # Run installer silently, output to C:\projects\julia-build
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia-build

install:
  # Conda install cmake, xtensor
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda install gtest cmake -c conda-forge
  - conda install xtensor==0.24.0 -c conda-forge
  # Install CxxWrap
  - C:\projects\julia-build\bin\julia -E "using Pkg; Pkg.add(PackageSpec(name=\"CxxWrap\", version=\"0.11.2\"))"
  # Retrieve JlCxx_DIR from CxxWrap
  - C:\projects\julia-build\bin\julia -E "using CxxWrap; joinpath(dirname(pathof(CxxWrap)), \"..\", \"deps\", \"usr\", \"lib\", \"cmake\", \"JlCxx\")" > temp.txt
  - set /p JlCxx_DIR=<temp.txt
  - set JlCxx_DIR=%JlCxx_DIR:"=%
  # Build xtensor-julia tests
  - mkdir build
  - cd build
  - cmake -G "NMake Makefiles" -D JlCxx_DIR=%JlCxx_DIR% -D CMAKE_INSTALL_PREFIX=%MINICONDA%\\LIBRARY -D BUILD_TESTS=ON -D CMAKE_PROGRAM_PATH=C:\projects\julia-build\bin\ ..
  - nmake test_xtensor_julia

build_script:
  # Add CxxWrap's vendored prefix to PATH
  - C:\projects\julia-build\bin\julia -E "using CxxWrap; joinpath(dirname(pathof(CxxWrap)), \"..\", \"deps\", \"usr\", \"lib\")" > temp.txt
  - set /p JlCxx_BINDIR=<temp.txt
  - set JlCxx_BINDIR=%JlCxx_BINDIR:"=%
  - set PATH=%PATH%;C:\projects\julia-build\bin;%JlCxx_BINDIR%
  # Run tests
  - nmake xtest
